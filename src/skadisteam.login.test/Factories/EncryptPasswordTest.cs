using skadisteam.login.Factories;
using skadisteam.login.Models.Json;
using Xunit;

namespace skadisteam.login.test.Factories
{
    public class EncryptPasswordTest
    {
        [Fact]
        public void Format()
        {
            var password = "coolPassword164";
            GetRsaKeyResponse getRsaKeyResponse = new GetRsaKeyResponse();
            getRsaKeyResponse.PublicKeyMod =

            getRsaKeyResponse.PublicKeyExp = "010001";
            var encryptedPassword = EncryptPasswordFactory.Create(getRsaKeyResponse, password);
            Assert.Contains("==", encryptedPassword);
        }

        [Fact]
        public void Length()
        {
            var password = "coolPassword164";
            GetRsaKeyResponse getRsaKeyResponse = new GetRsaKeyResponse();
            getRsaKeyResponse.PublicKeyMod =
               "Q9CT4C6LHFF8MQAEMG0P275Y6STP680EZXRU83YTRQPWSWC2NRBVUHMQHCA6LWLWCKWDWUZ8XQPMZRK5NW50E43ZQAQ9KQ4WES2WKANDN6ZH9KAMESSIRKVFA6OWS9MZ95RDBT1RN6NXU1FCGRRK6G0CAQX6M70VO2AWSHE84VS0Q1V3HL221ZRF1V5X2RZA9FO3TTQ9U7YKLX6NHDYKWIXASLJXVLG2IQWDAQ4A3CM5KJZUTT4064M7YXMMBJBL8CFYS3YSHPY2HNNZLCRKZQYFWH3654L1L5ARNMAOI1VX0YRTKJKW5Z6JRUVX126G6F1Q5E8KVQL4QVEI5NP3VIHO8KIN9GAUIGNJ3Y1749Y2MLT8BTTQ6XKRWWL5HHNUHURPKUOO4JX5O9EBWRD6A5BB49XIOJWZVOUOYVATL8GPKT9P88B2VCD3OMK3YZUHO5JBNU8YK4BLGKFAL7GU54DH5BGLXKQKD9YCUSKUWK0KF0Z64MY8GP7B4WTECPQZ";
            getRsaKeyResponse.PublicKeyExp = "010001";
            var encryptedPassword = EncryptPasswordFactory.Create(getRsaKeyResponse, password);
            Assert.True(password.Length <= encryptedPassword.Length);
        }
    }
}
